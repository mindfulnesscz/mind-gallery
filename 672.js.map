{"version":3,"file":"672.js","mappings":"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","sources":["webpack://mind-gallery/./src/components/_icons.tsx","webpack://mind-gallery/./src/mind-gallery.tsx"],"sourcesContent":["import React from 'react';\n\n/**\n * Custom icons\n */\n\ninterface Props {\n  className: string;\n}\n\nexport const GalleryArrow: React.FC<Props> = ( { className } ) => {\n  return (\n    <svg className=\"w-full h-full\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 50 50\">\n      <polygon className={className} points=\"50,22.9 6.1,22.9 18.3,10.4 16,8.1 0,24.6 16,41 18.3,38.8 6.1,26.2 50,26.2 \"/>\n    </svg>\n  );\n};\n\nexport const GalleryBottomButton: React.FC<Props> = ( { className } ) => {\n  return (\n    <svg className=\"w-full h-full\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\">\n      <g>\n        <polygon className={className} points=\"23.5,3 8.5,3 1,16 8.5,29 23.5,29 31,16\"/>\n      </g>\n    </svg>\n  );\n};\n\nexport const GalleryBottomButtonHexagon: React.FC<Props> = ( { className } ) => {\n  return (\n    <svg className=\"w-full h-full\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\">\n      <path className={className} d=\"M24,2.1H8L0,16l8,13.9h16L32,16L24,2.1L24,2.1z\"/>\n    </svg>\n  );\n};\n\nexport const HexaBig: React.FC<Props> = ( { className } ) => {\n  return (\n    <svg className=\"w-full h-full\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 80 80 \">\n      <path className={className} d=\"M60,5.4H20L0,40l20,34.6h40L80,40L60,5.4L60,5.4z\"/>\n    </svg>\n  );\n};\n\n","import React, { useState, useEffect, useRef } from 'react';\n//import { gsap } from 'gsap';\nimport { MindGalleryImage, MindGalleryProps } from './mind-gallery.d';\nimport Vimeo from '@vimeo/player';\nimport { GalleryArrow, GalleryBottomButton, GalleryBottomButtonHexagon, HexaBig } from './components/_icons';\n\n\nimport './css/mind-gallery.css';\n\ndeclare let gsap: any;\n\n\nconst MindGallery: React.FC<MindGalleryProps> = ( { feed, settings } ) => {\n\n  const [activeTitle, setActiveTitle] = useState( '' );\n  const [autoplayTimer, setAutoplayTimer] = useState<NodeJS.Timeout | null>( null );\n\n\n  const {\n    imageRatio = 1.618,\n    throttleDelay = 100,\n    galleryEasing = { duration: .6, ease: 'Sine.easeInOut' }\n  } = settings;\n\n  const [galleryWidth, setGalleryWidth] = useState( 0 );\n  const [active, setActive] = useState( 0 );\n  const [throttled, setThrottled] = useState( false );\n  const [autoplayEnabled, setAutoplayEnabled] = useState( true ); // needs to be true by default or obtained from settings var\n  const [currentPlayer, setCurrentPlayer] = useState( null );\n\n\n  const galleryCont = useRef<HTMLDivElement>( null );\n  const empty = Array.from( { length: feed.length }, () => React.createRef() as React.Ref<HTMLDivElement> );\n  const imageElArr = useRef( empty ) as any;\n\n\n  const setGallerySizes = () => {\n    console.log( 'setting' );\n\n    if ( !throttled ) {\n      if ( galleryCont && galleryCont.current ) {\n\n        const w = galleryCont.current.offsetWidth;\n        galleryCont.current.style.height = w / settings.imageRatio + 'px';\n\n        setGalleryWidth( w );\n\n        console.log( 'new height is ' + w / settings.imageRatio );\n      }\n\n      setThrottled( true );\n\n      setTimeout( () => {\n        console.log( 'wtfwtf' );\n        setThrottled( false );\n      }, 100 );\n    }\n  };\n\n\n  const nextImage = () => {\n    const nextId = active === feed.length - 1 ? 0 : active + 1;\n    showImage( nextId, active, 'next' );\n\n  };\n\n  const prevImage = () => {\n    const prevId = active === 0 ? feed.length - 1 : active - 1;\n    showImage( prevId, active, 'prev' );\n  };\n\n  const showImage = ( i: number, current = 0, button = '' ) => {\n\n    const el_current = imageElArr.current[current].current;\n    const el_next = imageElArr.current[i].current;\n\n    if ( el_current && el_next ) {\n\n      if ( autoplayTimer ) {\n        clearTimeout( autoplayTimer );\n      }\n\n      //console.log( 'changing to '+ current +' - '+i );    \n\n      /*console.log( '-----------------------' );\n      console.log( el_current );\n      console.log( el_next );\n      console.log( 'galleryWidth = ' +galleryWidth );\n      console.log( '-----------------------' );*/\n\n\n\n      if ( button != 'init' ) {\n\n        gsap.set( el_current, { left: 0 } );\n        gsap.set( el_next, { left: i < current && button != 'next' || button == 'prev' ? '-100%' : '100%' } );\n\n        gsap.to( el_current, { left: i < current && button != 'next' || button == 'prev' ? '100%' : '-100%', ...settings.galleryEasing } );\n        gsap.to( el_next, {\n          left: 0,\n          ...settings.galleryEasing,\n          onComplete: () => {\n            if ( autoplayEnabled ) {\n              setAutoplayTimer( setTimeout( () => {\n                showImage( i + 1 === feed.length ? 0 : i + 1, i, 'next' );\n              }, 5000 ) );\n            }\n          }\n        } );\n      }\n      else if ( autoplayEnabled ) {\n        setAutoplayTimer( setTimeout( () => {\n          showImage( i + 1 === feed.length ? 0 : i + 1, i, 'next' );\n        }, 5000 ) );\n      }\n\n      setActive( i );\n\n      setActiveTitle( feed[i].node.altText );\n\n      if ( currentPlayer ) {\n        console.log( currentPlayer );\n        currentPlayer.pause();\n      }\n      if ( feed[i].node.type == 'vimeo' ) {\n        console.log( el_next );\n        setCurrentPlayer( new Vimeo( el_next.querySelector( 'iframe' ) ) );\n      }\n\n    }\n  };\n\n  useEffect( () => {\n\n    setGallerySizes();\n\n    console.log( imageElArr.current[0].current );\n\n    gsap.set( imageElArr.current[0].current, { left: 0 } );\n\n    window.addEventListener( 'resize', setGallerySizes );\n\n    setActiveTitle( feed[0].node.altText );\n\n    feed.map( ( key, index ) => {\n\n      if ( key.node.type == 'vimeo' ) {\n        // shut the Autoplay feature if video is present. About to change to handle in v1.1\n        console.log( 'shutting outoplay' );\n        setAutoplayEnabled( false );\n      }\n    } );\n\n    console.log( autoplayEnabled + ' - autoplay' );\n\n\n    showImage( 0, feed.length - 1, 'init' );\n\n\n    return () => {\n      if ( autoplayTimer )\n        clearTimeout( autoplayTimer );\n      setAutoplayTimer( null );\n\n      //this was used in next.js app when was causing problems during routing\n      //window.removeEventListener('resize', setGallerySizes);\n    };\n\n  }, [autoplayEnabled] );\n\n\n  const getItem = ( imageObject: MindGalleryImage ) => {\n    if ( imageObject.node.type == 'vimeo' ) {\n      return (\n        <div className=\"mind-vimeo-responsive\">\n          <iframe\n            className=\"mind-vimeo-responsive-item\"\n            src={imageObject.node.altText}\n            width=\"1920\"\n            height=\"1080\"\n            allowFullScreen={true}\n          />\n        </div>\n      );\n    } \n    else if ( imageObject.node.type == 'mp4' ) {\n      return (\n        <video\n          id=\"my-video\"\n          className=\"video-js vjs-16-9\"\n          controls\n          preload=\"auto\"\n          width=\"960\"\n          height=\"540\"\n          poster={imageObject.node.sourceUrl}\n          data-setup=\"{}\"\n        >\n          <source src={imageObject.node.altText} type=\"video/mp4\" />\n          <p className=\"vjs-no-js\">\n          To view this video please enable JavaScript, and consider upgrading to\n          a web browser that supports it.\n          </p>\n        </video>\n\n      );\n    } \n    else {\n      return (\n        <img\n          className=\"\"\n          src={imageObject.node.sourceUrl}\n          sizes=\"(min-width: 1024px) 1024px, 100vw\"\n          alt={imageObject.node.altText}\n        />\n      );\n    }\n\n  };\n\n  return (\n    <div className=\"flex relative flex-wrap justify-center w-full \">\n      {/* -------- CONT-------- */}\n\n      <div ref={galleryCont} className=\"overflow-hidden relative w-full rounded-3xl\">\n\n        {/* -------- IMAGES -------- */}\n        {\n          feed.map( ( key, index ) => {\n            return (\n              <div\n                key={`image-${index}`}\n                ref={imageElArr.current[index]}\n                className={`element-${index} absolute left-full top-0  w-full h-full`}\n              >\n                <div className=\"relative w-full h-full\">\n                  {getItem( key )}\n                </div>\n              </div>\n            );\n          } )\n        }\n\n        {/* -------- LEFT AND RIGHT BUTTONS -------- */}\n\n        <div\n          onClick={nextImage}\n          className=\"mind-hexa-button absolute top-1/2 -mt-7 md:-mt-10 w-14 h-14 md:w-20 md:h-20 rounded-full cursor-pointer sm:bottom-0 md:right-2 right-0\"\n        >\n          <div className=\"relative p-4 z-10 rotate-180\"><GalleryArrow className={'fill-itsblue w-2 h-2'}/></div>\n          <div className=\"absolute z-0 w-full h-full top-0 left-0\">\n            <HexaBig className=\"fill-white \"></HexaBig>\n          </div>\n        </div>\n        <div\n          onClick={prevImage}\n          className=\"mind-hexa-button absolute top-1/2 left-0 -mt-7 md:-mt-10 w-14 h-14 md:w-20 md:h-20 rounded-full cursor-pointer md:left-2\"\n        >\n          <div className=\"relative p-4 z-10\"><GalleryArrow className={'fill-itsblue w-2 h-2'}/></div>\n          <div className=\"absolute z-0 w-full h-full top-0 left-0\">\n            <HexaBig className=\"fill-white\"></HexaBig>\n          </div>\n        </div>\n\n        \n        \n      </div>\n      {/* -------- TITLES -------- */}\n\n      {/*<div className=\"my-1 italic text-center text-gray-400\">\n        {activeTitle}\n      </div>*/}\n\n      {/* -------- HEXAGONS BOTTOM MENU -------- */}\n\n      <div className=\"flex justify-center w-full rounded-full\">\n        <div className=\"px-2\">\n          {\n            feed.map( ( el, i ) =>\n              <div\n                onClick={i !== active ? () => { showImage( i, active, '' ); } : () => { console.log( '' ); }}\n                key={`img-button-${i}`}\n                className={`relative inline-block mx-1 lg:mx-1 mt-2 w-6 h-6 lg:w-10 lg:h-10 ${i !== active ? 'cursor-pointer' : ''}`}\n              >\n                <div className=\"mind-bottom-button absolute w-full h-full\">\n                  <GalleryBottomButton className={`${i === active ? 'stroke-itsblue' : 'stroke-gray-300'} fill-white`} />\n                </div>\n\n                <div className={`absolute w-full h-full p-2 duration-300 transition-all ${i === active ? 'opacity-100 scale-100' : 'opacity-0 scale-0'}`}>\n                  <GalleryBottomButtonHexagon className='fill-itsblue' />\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MindGallery;"],"names":["GalleryArrow","className","version","xmlns","x","y","viewBox","points","GalleryBottomButton","GalleryBottomButtonHexagon","d","HexaBig","feed","settings","activeTitle","setActiveTitle","useState","autoplayTimer","setAutoplayTimer","imageRatio","throttleDelay","galleryEasing","duration","ease","galleryWidth","setGalleryWidth","active","setActive","throttled","setThrottled","autoplayEnabled","setAutoplayEnabled","currentPlayer","setCurrentPlayer","galleryCont","useRef","empty","Array","from","length","imageElArr","setGallerySizes","console","log","current","w","offsetWidth","style","height","setTimeout","showImage","i","button","el_current","el_next","clearTimeout","gsap","set","left","to","onComplete","node","altText","pause","type","querySelector","useEffect","window","addEventListener","map","key","index","ref","imageObject","src","width","allowFullScreen","id","controls","preload","poster","sourceUrl","sizes","alt","onClick","nextId","prevId","el"],"sourceRoot":""}